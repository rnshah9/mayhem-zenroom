name: Release on PyPI

on:
  workflow_dispatch:
    inputs:
      zenroom_python_version:
        description: 'Release version of the zenroom python to publish (eg.: 2.0.0)'
        required: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build wheels
        run: |
          # Remove shared library
          rm -f bindings/golang/zenroom/lib/libzenroom.so
          cp bindings/python3/setup.py .
          sed -ie 's/version=get_python_version()/version=${{ github.event.inputs.zenroom_python_version }}/' setup.py
          pip install cibuildwheel
          cibuildwheel --output-dir wheelhouse
        env:
          # configure cibuildwheel to build native archs ('auto'), and some
          # emulated ones
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_I686_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_24
          # Skip building on Python 2.7, Python 3.5, 3.6 and PyPy on all platforms
          CIBW_SKIP: cp27-* cp3{5,6}-* pp* *-musllinux*
          CIBW_BEFORE_BUILD_LINUX: apt-get update && apt-get install -y cmake vim zsh && pip install meson ninja
          CIBW_BEFORE_BUILD_MACOS: brew install cmake vim zsh && pip install meson ninja

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
